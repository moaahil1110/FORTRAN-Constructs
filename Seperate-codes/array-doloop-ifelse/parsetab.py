
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND CHARACTER COMMA CONTINUE DCOLON DIMENSION DIVIDE DO ELSE ENDDO ENDIF EQ EQUALS EXIT FALSE GE GT IDENTIFIER IF INTEGER LE LOGICAL LPAREN LT MINUS NE NOT NUMBER OR PLUS POWER PRINT READ REAL RPAREN STRING THEN TIMES TRUEprogram : statement\n               | program statementstatement : declaration\n                | assignment\n                | if_statement\n                | do_loop\n                | io_statement\n                | CONTINUE\n                | EXITdeclaration : type DCOLON IDENTIFIER\n                  | type DCOLON IDENTIFIER LPAREN array_dims RPAREN\n                  | DIMENSION DCOLON IDENTIFIER LPAREN array_dims RPARENtype : INTEGER\n            | REAL\n            | CHARACTER\n            | LOGICALarray_dims : NUMBER\n                 | IDENTIFIER\n                 | array_dims COMMA NUMBER\n                 | array_dims COMMA IDENTIFIERassignment : target EQUALS expressiontarget : IDENTIFIER\n              | array_refarray_ref : IDENTIFIER LPAREN expression RPAREN\n                | IDENTIFIER LPAREN expression_list RPARENif_statement : IF LPAREN condition RPAREN THEN statement_list ENDIF\n                   | IF LPAREN condition RPAREN THEN statement_list ELSE statement_list ENDIFdo_loop : DO IDENTIFIER EQUALS expression COMMA expression statement_list ENDDOstatement_list : statement\n                     | statement_list statementio_statement : PRINT TIMES COMMA print_list\n                   | READ TIMES COMMA read_listprint_list : expression\n                 | STRING\n                 | print_list COMMA expression\n                 | print_list COMMA STRINGread_list : IDENTIFIER\n                | read_list COMMA IDENTIFIERexpression : term\n                 | expression PLUS term\n                 | expression MINUS termterm : factor\n            | term TIMES factor\n            | term DIVIDE factorfactor : primary\n              | factor POWER primaryprimary : NUMBER\n               | IDENTIFIER\n               | LPAREN expression RPAREN\n               | array_refexpression_list : expression\n                      | expression_list COMMA expressioncondition : expression GT expression\n                | expression LT expression\n                | expression GE expression\n                | expression LE expression\n                | expression EQ expression\n                | expression NE expression\n                | condition AND condition\n                | condition OR condition\n                | NOT condition\n                | LPAREN condition RPAREN\n                | TRUE\n                | FALSE'
    
_lr_action_items = {'CONTINUE':([0,1,2,3,4,5,6,7,8,9,23,32,33,37,38,39,40,41,43,55,58,77,78,79,80,81,85,86,87,89,90,91,94,106,108,109,110,111,112,113,114,117,118,119,120,121,122,123,],[8,8,-1,-3,-4,-5,-6,-7,-8,-9,-2,-10,-48,-39,-42,-45,-47,-50,-21,-24,-25,-31,-33,-34,-32,-37,-49,-40,-41,-43,-44,-46,8,-11,-12,8,-29,8,-35,-36,-38,-26,8,-30,8,8,-28,-27,]),'EXIT':([0,1,2,3,4,5,6,7,8,9,23,32,33,37,38,39,40,41,43,55,58,77,78,79,80,81,85,86,87,89,90,91,94,106,108,109,110,111,112,113,114,117,118,119,120,121,122,123,],[9,9,-1,-3,-4,-5,-6,-7,-8,-9,-2,-10,-48,-39,-42,-45,-47,-50,-21,-24,-25,-31,-33,-34,-32,-37,-49,-40,-41,-43,-44,-46,9,-11,-12,9,-29,9,-35,-36,-38,-26,9,-30,9,9,-28,-27,]),'DIMENSION':([0,1,2,3,4,5,6,7,8,9,23,32,33,37,38,39,40,41,43,55,58,77,78,79,80,81,85,86,87,89,90,91,94,106,108,109,110,111,112,113,114,117,118,119,120,121,122,123,],[12,12,-1,-3,-4,-5,-6,-7,-8,-9,-2,-10,-48,-39,-42,-45,-47,-50,-21,-24,-25,-31,-33,-34,-32,-37,-49,-40,-41,-43,-44,-46,12,-11,-12,12,-29,12,-35,-36,-38,-26,12,-30,12,12,-28,-27,]),'IF':([0,1,2,3,4,5,6,7,8,9,23,32,33,37,38,39,40,41,43,55,58,77,78,79,80,81,85,86,87,89,90,91,94,106,108,109,110,111,112,113,114,117,118,119,120,121,122,123,],[14,14,-1,-3,-4,-5,-6,-7,-8,-9,-2,-10,-48,-39,-42,-45,-47,-50,-21,-24,-25,-31,-33,-34,-32,-37,-49,-40,-41,-43,-44,-46,14,-11,-12,14,-29,14,-35,-36,-38,-26,14,-30,14,14,-28,-27,]),'DO':([0,1,2,3,4,5,6,7,8,9,23,32,33,37,38,39,40,41,43,55,58,77,78,79,80,81,85,86,87,89,90,91,94,106,108,109,110,111,112,113,114,117,118,119,120,121,122,123,],[15,15,-1,-3,-4,-5,-6,-7,-8,-9,-2,-10,-48,-39,-42,-45,-47,-50,-21,-24,-25,-31,-33,-34,-32,-37,-49,-40,-41,-43,-44,-46,15,-11,-12,15,-29,15,-35,-36,-38,-26,15,-30,15,15,-28,-27,]),'PRINT':([0,1,2,3,4,5,6,7,8,9,23,32,33,37,38,39,40,41,43,55,58,77,78,79,80,81,85,86,87,89,90,91,94,106,108,109,110,111,112,113,114,117,118,119,120,121,122,123,],[16,16,-1,-3,-4,-5,-6,-7,-8,-9,-2,-10,-48,-39,-42,-45,-47,-50,-21,-24,-25,-31,-33,-34,-32,-37,-49,-40,-41,-43,-44,-46,16,-11,-12,16,-29,16,-35,-36,-38,-26,16,-30,16,16,-28,-27,]),'READ':([0,1,2,3,4,5,6,7,8,9,23,32,33,37,38,39,40,41,43,55,58,77,78,79,80,81,85,86,87,89,90,91,94,106,108,109,110,111,112,113,114,117,118,119,120,121,122,123,],[17,17,-1,-3,-4,-5,-6,-7,-8,-9,-2,-10,-48,-39,-42,-45,-47,-50,-21,-24,-25,-31,-33,-34,-32,-37,-49,-40,-41,-43,-44,-46,17,-11,-12,17,-29,17,-35,-36,-38,-26,17,-30,17,17,-28,-27,]),'INTEGER':([0,1,2,3,4,5,6,7,8,9,23,32,33,37,38,39,40,41,43,55,58,77,78,79,80,81,85,86,87,89,90,91,94,106,108,109,110,111,112,113,114,117,118,119,120,121,122,123,],[18,18,-1,-3,-4,-5,-6,-7,-8,-9,-2,-10,-48,-39,-42,-45,-47,-50,-21,-24,-25,-31,-33,-34,-32,-37,-49,-40,-41,-43,-44,-46,18,-11,-12,18,-29,18,-35,-36,-38,-26,18,-30,18,18,-28,-27,]),'REAL':([0,1,2,3,4,5,6,7,8,9,23,32,33,37,38,39,40,41,43,55,58,77,78,79,80,81,85,86,87,89,90,91,94,106,108,109,110,111,112,113,114,117,118,119,120,121,122,123,],[19,19,-1,-3,-4,-5,-6,-7,-8,-9,-2,-10,-48,-39,-42,-45,-47,-50,-21,-24,-25,-31,-33,-34,-32,-37,-49,-40,-41,-43,-44,-46,19,-11,-12,19,-29,19,-35,-36,-38,-26,19,-30,19,19,-28,-27,]),'CHARACTER':([0,1,2,3,4,5,6,7,8,9,23,32,33,37,38,39,40,41,43,55,58,77,78,79,80,81,85,86,87,89,90,91,94,106,108,109,110,111,112,113,114,117,118,119,120,121,122,123,],[20,20,-1,-3,-4,-5,-6,-7,-8,-9,-2,-10,-48,-39,-42,-45,-47,-50,-21,-24,-25,-31,-33,-34,-32,-37,-49,-40,-41,-43,-44,-46,20,-11,-12,20,-29,20,-35,-36,-38,-26,20,-30,20,20,-28,-27,]),'LOGICAL':([0,1,2,3,4,5,6,7,8,9,23,32,33,37,38,39,40,41,43,55,58,77,78,79,80,81,85,86,87,89,90,91,94,106,108,109,110,111,112,113,114,117,118,119,120,121,122,123,],[21,21,-1,-3,-4,-5,-6,-7,-8,-9,-2,-10,-48,-39,-42,-45,-47,-50,-21,-24,-25,-31,-33,-34,-32,-37,-49,-40,-41,-43,-44,-46,21,-11,-12,21,-29,21,-35,-36,-38,-26,21,-30,21,21,-28,-27,]),'IDENTIFIER':([0,1,2,3,4,5,6,7,8,9,15,23,24,25,26,27,28,32,33,34,37,38,39,40,41,43,44,47,50,51,52,53,55,56,57,58,59,60,61,62,63,67,68,69,70,71,72,73,74,77,78,79,80,81,85,86,87,89,90,91,94,103,104,105,106,107,108,109,110,111,112,113,114,117,118,119,120,121,122,123,],[11,11,-1,-3,-4,-5,-6,-7,-8,-9,29,-2,32,33,42,33,33,-10,-48,33,-39,-42,-45,-47,-50,-21,33,33,33,33,81,82,-24,33,33,-25,33,33,33,33,82,33,33,33,33,33,33,33,33,-31,-33,-34,-32,-37,-49,-40,-41,-43,-44,-46,11,33,33,114,-11,116,-12,11,-29,11,-35,-36,-38,-26,11,-30,11,11,-28,-27,]),'$end':([1,2,3,4,5,6,7,8,9,23,32,33,37,38,39,40,41,43,55,58,77,78,79,80,81,85,86,87,89,90,91,106,108,112,113,114,117,122,123,],[0,-1,-3,-4,-5,-6,-7,-8,-9,-2,-10,-48,-39,-42,-45,-47,-50,-21,-24,-25,-31,-33,-34,-32,-37,-49,-40,-41,-43,-44,-46,-11,-12,-35,-36,-38,-26,-28,-27,]),'ENDIF':([3,4,5,6,7,8,9,32,33,37,38,39,40,41,43,55,58,77,78,79,80,81,85,86,87,89,90,91,106,108,109,110,112,113,114,117,119,121,122,123,],[-3,-4,-5,-6,-7,-8,-9,-10,-48,-39,-42,-45,-47,-50,-21,-24,-25,-31,-33,-34,-32,-37,-49,-40,-41,-43,-44,-46,-11,-12,117,-29,-35,-36,-38,-26,-30,123,-28,-27,]),'ELSE':([3,4,5,6,7,8,9,32,33,37,38,39,40,41,43,55,58,77,78,79,80,81,85,86,87,89,90,91,106,108,109,110,112,113,114,117,119,122,123,],[-3,-4,-5,-6,-7,-8,-9,-10,-48,-39,-42,-45,-47,-50,-21,-24,-25,-31,-33,-34,-32,-37,-49,-40,-41,-43,-44,-46,-11,-12,118,-29,-35,-36,-38,-26,-30,-28,-27,]),'ENDDO':([3,4,5,6,7,8,9,32,33,37,38,39,40,41,43,55,58,77,78,79,80,81,85,86,87,89,90,91,106,108,110,112,113,114,117,119,120,122,123,],[-3,-4,-5,-6,-7,-8,-9,-10,-48,-39,-42,-45,-47,-50,-21,-24,-25,-31,-33,-34,-32,-37,-49,-40,-41,-43,-44,-46,-11,-12,-29,-35,-36,-38,-26,-30,122,-28,-27,]),'DCOLON':([10,12,18,19,20,21,],[24,26,-13,-14,-15,-16,]),'EQUALS':([11,13,22,29,55,58,],[-22,27,-23,50,-24,-25,]),'LPAREN':([11,14,25,27,28,32,33,34,42,44,47,50,51,56,57,59,60,61,62,67,68,69,70,71,72,73,74,103,104,],[25,28,34,34,44,53,25,34,63,44,44,34,34,34,34,34,34,34,34,44,44,34,34,34,34,34,34,34,34,]),'TIMES':([16,17,33,37,38,39,40,41,55,58,85,86,87,89,90,91,],[30,31,-48,60,-42,-45,-47,-50,-24,-25,-49,60,60,-43,-44,-46,]),'NUMBER':([25,27,28,34,44,47,50,51,53,56,57,59,60,61,62,63,67,68,69,70,71,72,73,74,103,104,107,],[40,40,40,40,40,40,40,40,84,40,40,40,40,40,40,84,40,40,40,40,40,40,40,40,40,40,115,]),'NOT':([28,44,47,67,68,],[47,47,47,47,47,]),'TRUE':([28,44,47,67,68,],[48,48,48,48,48,]),'FALSE':([28,44,47,67,68,],[49,49,49,49,49,]),'COMMA':([30,31,33,35,36,37,38,39,40,41,55,58,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,112,113,114,115,116,],[51,52,-48,-51,59,-39,-42,-45,-47,-50,-24,-25,103,104,-33,-34,105,-37,-18,107,-17,-49,-40,-41,-52,-43,-44,-46,107,-35,-36,-38,-19,-20,]),'POWER':([33,38,39,40,41,55,58,85,89,90,91,],[-48,62,-45,-47,-50,-24,-25,-49,62,62,-46,]),'DIVIDE':([33,37,38,39,40,41,55,58,85,86,87,89,90,91,],[-48,61,-42,-45,-47,-50,-24,-25,-49,61,61,-43,-44,-46,]),'RPAREN':([33,35,36,37,38,39,40,41,45,48,49,54,55,58,64,65,75,82,83,84,85,86,87,88,89,90,91,92,93,95,96,97,98,99,100,101,102,115,116,],[-48,55,58,-39,-42,-45,-47,-50,66,-63,-64,85,-24,-25,93,85,-61,-18,106,-17,-49,-40,-41,-52,-43,-44,-46,108,-62,-59,-60,-53,-54,-55,-56,-57,-58,-19,-20,]),'PLUS':([33,35,37,38,39,40,41,43,46,54,55,58,65,76,78,85,86,87,88,89,90,91,97,98,99,100,101,102,111,112,],[-48,56,-39,-42,-45,-47,-50,56,56,56,-24,-25,56,56,56,-49,-40,-41,56,-43,-44,-46,56,56,56,56,56,56,56,56,]),'MINUS':([33,35,37,38,39,40,41,43,46,54,55,58,65,76,78,85,86,87,88,89,90,91,97,98,99,100,101,102,111,112,],[-48,57,-39,-42,-45,-47,-50,57,57,57,-24,-25,57,57,57,-49,-40,-41,57,-43,-44,-46,57,57,57,57,57,57,57,57,]),'GT':([33,37,38,39,40,41,46,55,58,65,85,86,87,89,90,91,],[-48,-39,-42,-45,-47,-50,69,-24,-25,69,-49,-40,-41,-43,-44,-46,]),'LT':([33,37,38,39,40,41,46,55,58,65,85,86,87,89,90,91,],[-48,-39,-42,-45,-47,-50,70,-24,-25,70,-49,-40,-41,-43,-44,-46,]),'GE':([33,37,38,39,40,41,46,55,58,65,85,86,87,89,90,91,],[-48,-39,-42,-45,-47,-50,71,-24,-25,71,-49,-40,-41,-43,-44,-46,]),'LE':([33,37,38,39,40,41,46,55,58,65,85,86,87,89,90,91,],[-48,-39,-42,-45,-47,-50,72,-24,-25,72,-49,-40,-41,-43,-44,-46,]),'EQ':([33,37,38,39,40,41,46,55,58,65,85,86,87,89,90,91,],[-48,-39,-42,-45,-47,-50,73,-24,-25,73,-49,-40,-41,-43,-44,-46,]),'NE':([33,37,38,39,40,41,46,55,58,65,85,86,87,89,90,91,],[-48,-39,-42,-45,-47,-50,74,-24,-25,74,-49,-40,-41,-43,-44,-46,]),'AND':([33,37,38,39,40,41,45,48,49,55,58,64,75,85,86,87,89,90,91,93,95,96,97,98,99,100,101,102,],[-48,-39,-42,-45,-47,-50,67,-63,-64,-24,-25,67,67,-49,-40,-41,-43,-44,-46,-62,67,67,-53,-54,-55,-56,-57,-58,]),'OR':([33,37,38,39,40,41,45,48,49,55,58,64,75,85,86,87,89,90,91,93,95,96,97,98,99,100,101,102,],[-48,-39,-42,-45,-47,-50,68,-63,-64,-24,-25,68,68,-49,-40,-41,-43,-44,-46,-62,68,68,-53,-54,-55,-56,-57,-58,]),'STRING':([51,104,],[79,113,]),'THEN':([66,],[94,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statement':([0,1,94,109,111,118,120,121,],[2,23,110,119,110,110,119,119,]),'declaration':([0,1,94,109,111,118,120,121,],[3,3,3,3,3,3,3,3,]),'assignment':([0,1,94,109,111,118,120,121,],[4,4,4,4,4,4,4,4,]),'if_statement':([0,1,94,109,111,118,120,121,],[5,5,5,5,5,5,5,5,]),'do_loop':([0,1,94,109,111,118,120,121,],[6,6,6,6,6,6,6,6,]),'io_statement':([0,1,94,109,111,118,120,121,],[7,7,7,7,7,7,7,7,]),'type':([0,1,94,109,111,118,120,121,],[10,10,10,10,10,10,10,10,]),'target':([0,1,94,109,111,118,120,121,],[13,13,13,13,13,13,13,13,]),'array_ref':([0,1,25,27,28,34,44,47,50,51,56,57,59,60,61,62,67,68,69,70,71,72,73,74,94,103,104,109,111,118,120,121,],[22,22,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,22,41,41,22,22,22,22,22,]),'expression':([25,27,28,34,44,47,50,51,59,67,68,69,70,71,72,73,74,103,104,],[35,43,46,54,65,46,76,78,88,46,46,97,98,99,100,101,102,111,112,]),'expression_list':([25,],[36,]),'term':([25,27,28,34,44,47,50,51,56,57,59,67,68,69,70,71,72,73,74,103,104,],[37,37,37,37,37,37,37,37,86,87,37,37,37,37,37,37,37,37,37,37,37,]),'factor':([25,27,28,34,44,47,50,51,56,57,59,60,61,67,68,69,70,71,72,73,74,103,104,],[38,38,38,38,38,38,38,38,38,38,38,89,90,38,38,38,38,38,38,38,38,38,38,]),'primary':([25,27,28,34,44,47,50,51,56,57,59,60,61,62,67,68,69,70,71,72,73,74,103,104,],[39,39,39,39,39,39,39,39,39,39,39,39,39,91,39,39,39,39,39,39,39,39,39,39,]),'condition':([28,44,47,67,68,],[45,64,75,95,96,]),'print_list':([51,],[77,]),'read_list':([52,],[80,]),'array_dims':([53,63,],[83,92,]),'statement_list':([94,111,118,],[109,120,121,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement','program',1,'p_program','First-3-Constructs.py',165),
  ('program -> program statement','program',2,'p_program','First-3-Constructs.py',166),
  ('statement -> declaration','statement',1,'p_statement','First-3-Constructs.py',170),
  ('statement -> assignment','statement',1,'p_statement','First-3-Constructs.py',171),
  ('statement -> if_statement','statement',1,'p_statement','First-3-Constructs.py',172),
  ('statement -> do_loop','statement',1,'p_statement','First-3-Constructs.py',173),
  ('statement -> io_statement','statement',1,'p_statement','First-3-Constructs.py',174),
  ('statement -> CONTINUE','statement',1,'p_statement','First-3-Constructs.py',175),
  ('statement -> EXIT','statement',1,'p_statement','First-3-Constructs.py',176),
  ('declaration -> type DCOLON IDENTIFIER','declaration',3,'p_declaration','First-3-Constructs.py',180),
  ('declaration -> type DCOLON IDENTIFIER LPAREN array_dims RPAREN','declaration',6,'p_declaration','First-3-Constructs.py',181),
  ('declaration -> DIMENSION DCOLON IDENTIFIER LPAREN array_dims RPAREN','declaration',6,'p_declaration','First-3-Constructs.py',182),
  ('type -> INTEGER','type',1,'p_type','First-3-Constructs.py',186),
  ('type -> REAL','type',1,'p_type','First-3-Constructs.py',187),
  ('type -> CHARACTER','type',1,'p_type','First-3-Constructs.py',188),
  ('type -> LOGICAL','type',1,'p_type','First-3-Constructs.py',189),
  ('array_dims -> NUMBER','array_dims',1,'p_array_dims','First-3-Constructs.py',193),
  ('array_dims -> IDENTIFIER','array_dims',1,'p_array_dims','First-3-Constructs.py',194),
  ('array_dims -> array_dims COMMA NUMBER','array_dims',3,'p_array_dims','First-3-Constructs.py',195),
  ('array_dims -> array_dims COMMA IDENTIFIER','array_dims',3,'p_array_dims','First-3-Constructs.py',196),
  ('assignment -> target EQUALS expression','assignment',3,'p_assignment','First-3-Constructs.py',201),
  ('target -> IDENTIFIER','target',1,'p_target','First-3-Constructs.py',205),
  ('target -> array_ref','target',1,'p_target','First-3-Constructs.py',206),
  ('array_ref -> IDENTIFIER LPAREN expression RPAREN','array_ref',4,'p_array_ref','First-3-Constructs.py',210),
  ('array_ref -> IDENTIFIER LPAREN expression_list RPAREN','array_ref',4,'p_array_ref','First-3-Constructs.py',211),
  ('if_statement -> IF LPAREN condition RPAREN THEN statement_list ENDIF','if_statement',7,'p_if_statement','First-3-Constructs.py',215),
  ('if_statement -> IF LPAREN condition RPAREN THEN statement_list ELSE statement_list ENDIF','if_statement',9,'p_if_statement','First-3-Constructs.py',216),
  ('do_loop -> DO IDENTIFIER EQUALS expression COMMA expression statement_list ENDDO','do_loop',8,'p_do_loop','First-3-Constructs.py',220),
  ('statement_list -> statement','statement_list',1,'p_statement_list','First-3-Constructs.py',224),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','First-3-Constructs.py',225),
  ('io_statement -> PRINT TIMES COMMA print_list','io_statement',4,'p_io_statement','First-3-Constructs.py',229),
  ('io_statement -> READ TIMES COMMA read_list','io_statement',4,'p_io_statement','First-3-Constructs.py',230),
  ('print_list -> expression','print_list',1,'p_print_list','First-3-Constructs.py',234),
  ('print_list -> STRING','print_list',1,'p_print_list','First-3-Constructs.py',235),
  ('print_list -> print_list COMMA expression','print_list',3,'p_print_list','First-3-Constructs.py',236),
  ('print_list -> print_list COMMA STRING','print_list',3,'p_print_list','First-3-Constructs.py',237),
  ('read_list -> IDENTIFIER','read_list',1,'p_read_list','First-3-Constructs.py',241),
  ('read_list -> read_list COMMA IDENTIFIER','read_list',3,'p_read_list','First-3-Constructs.py',242),
  ('expression -> term','expression',1,'p_expression','First-3-Constructs.py',247),
  ('expression -> expression PLUS term','expression',3,'p_expression','First-3-Constructs.py',248),
  ('expression -> expression MINUS term','expression',3,'p_expression','First-3-Constructs.py',249),
  ('term -> factor','term',1,'p_term','First-3-Constructs.py',253),
  ('term -> term TIMES factor','term',3,'p_term','First-3-Constructs.py',254),
  ('term -> term DIVIDE factor','term',3,'p_term','First-3-Constructs.py',255),
  ('factor -> primary','factor',1,'p_factor','First-3-Constructs.py',259),
  ('factor -> factor POWER primary','factor',3,'p_factor','First-3-Constructs.py',260),
  ('primary -> NUMBER','primary',1,'p_primary','First-3-Constructs.py',264),
  ('primary -> IDENTIFIER','primary',1,'p_primary','First-3-Constructs.py',265),
  ('primary -> LPAREN expression RPAREN','primary',3,'p_primary','First-3-Constructs.py',266),
  ('primary -> array_ref','primary',1,'p_primary','First-3-Constructs.py',267),
  ('expression_list -> expression','expression_list',1,'p_expression_list','First-3-Constructs.py',271),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','First-3-Constructs.py',272),
  ('condition -> expression GT expression','condition',3,'p_condition','First-3-Constructs.py',276),
  ('condition -> expression LT expression','condition',3,'p_condition','First-3-Constructs.py',277),
  ('condition -> expression GE expression','condition',3,'p_condition','First-3-Constructs.py',278),
  ('condition -> expression LE expression','condition',3,'p_condition','First-3-Constructs.py',279),
  ('condition -> expression EQ expression','condition',3,'p_condition','First-3-Constructs.py',280),
  ('condition -> expression NE expression','condition',3,'p_condition','First-3-Constructs.py',281),
  ('condition -> condition AND condition','condition',3,'p_condition','First-3-Constructs.py',282),
  ('condition -> condition OR condition','condition',3,'p_condition','First-3-Constructs.py',283),
  ('condition -> NOT condition','condition',2,'p_condition','First-3-Constructs.py',284),
  ('condition -> LPAREN condition RPAREN','condition',3,'p_condition','First-3-Constructs.py',285),
  ('condition -> TRUE','condition',1,'p_condition','First-3-Constructs.py',286),
  ('condition -> FALSE','condition',1,'p_condition','First-3-Constructs.py',287),
]
